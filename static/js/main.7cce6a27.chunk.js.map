{"version":3,"sources":["services/fbase.js","routes/Auth.js","components/Flag.js","routes/FlagBorder.js","routes/FlagSearch.js","routes/Suro.js","routes/Home.js","components/Notice.js","routes/NoticeBorder.js","routes/Profile.js","components/Navigation.js","components/Routes.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","logindbAdd","user","a","collection","doc","uid","set","createdAt","Date","now","displayName","update","outsider","FieldValue","arrayUnion","onSubmit","preventDefault","createUserWithEmailAndPassword","then","snapshot","signInWithEmailAndPassword","code","message","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","additionalUserInfo","isNewUser","className","type","placeholder","required","onClick","prev","Flag","flagObj","isOwner","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentUrl","flagTime","creatorDisplayName","src","width","height","alt","FlagBorder","userObj","attachment","setAttachment","setFlagTime","flagViewTime","setFlagViewTime","state","setState","flags","setFlags","lastMonthDay","uploadBtn","document","querySelector","setAttribute","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","console","log","add","creatorId","clearAttachment","removeAttribute","getMonthDay","flag","flagDay","flagFormmat","getMonth","getDate","useEffect","hours","getHours","getElementById","disabled","where","orderBy","onSnapshot","flagArray","docs","map","data","hidden","defaultValue","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","capture","FlagSearch","authority","history","useHistory","searchType","setSearchType","users","setUsers","selectedUser","setSelectedUser","searchText","setSearchText","checkAuthority","useCallback","push","onSearchMenuClick","innerHTML","onSelectUser","get","forEach","userArray","today","getTimeList","Suro","suroTime","Home","Notice","noticeObj","editing","setEditing","newNoticeTitle","setNewNoticeTitle","newNoticeContents","setNewNoticeContents","contentView","setContentView","toggleEditing","noticeTitle","noticeContents","autoComplete","maxLength","cols","rows","NoticeBorder","setNoticeTitle","setNoticeContents","notices","setNotices","newNotice","setNewNotice","noticeArray","notice","Profile","refreshUser","newDisplayName","setNewDisplayName","updateProfile","signOut","Navigation","to","AppRouter","exact","path","App","init","setInit","setUserObj","setAuthority","getRoles","roles","master","submaster","includes","onAuthStateChanged","args","currentUser","ReactDOM","render","StrictMode"],"mappings":"8XAeAA,IAASC,cAVc,CACrBC,OAAQC,0CACRC,WAAYD,6BACZE,YAAaF,oCACbG,UAAWH,aACXI,cAAeJ,yBACfK,kBAAmBL,eACnBM,MAAON,8CAKF,IAAMO,EAAmBV,IACnBW,EAAcX,IAASY,OACvBC,EAAYb,IAASc,YACrBC,EAAiBf,IAASgB,UCoGxBC,G,MApHF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEeF,mBAAS,IAFxB,mBAEVG,EAFU,KAEAC,EAFA,OAGmBJ,oBAAS,GAH5B,mBAGVK,EAHU,KAGEC,EAHF,OAISN,mBAAS,IAJlB,mBAIVO,EAJU,KAIHC,EAJG,KAMXC,EAAW,SAACC,GAAW,IAAD,EAGtBA,EADFC,OAAUC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MAEL,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,IAGVC,EAAU,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACXrB,EAAUsB,WAAW,YAAYC,IAAjC,UAAwCH,EAAKI,MAAOC,IAAI,CAC5DC,UAAWC,KAAKC,MAChBtB,MAAOc,EAAKd,MACZuB,YAAaT,EAAKS,cAJH,OAOjB7B,EACGsB,WAAW,QACXC,IAAI,wBACJO,OAAO,CACNC,SAAUlC,EAAiBI,UAAU+B,WAAWC,WAAWb,EAAKI,OAXnD,2CAAH,sDAcVU,EAAQ,uCAAG,WAAOnB,GAAP,SAAAM,EAAA,yDACfN,EAAMoB,iBADS,UAGTzB,EAHS,gCAILZ,EACHsC,+BAA+B9B,EAAOE,GACtC6B,MAAK,SAACC,GAAD,OAAcnB,EAAWmB,EAASlB,SAN/B,6CAQLtB,EAAYyC,2BAA2BjC,EAAOE,GARzC,yDAWM,wBAAf,KAAMgC,KACR3B,EAAS,kEACe,wBAAf,KAAM2B,KACf3B,EAAS,0EACe,8BAAf,KAAM2B,KACf3B,EAAS,+EACe,uBAAf,KAAM2B,KACf3B,EAAS,mGAETA,EAAS,KAAM4B,SApBJ,0DAAH,sDAyBRC,EAAa,uCAAG,WAAO3B,GAAP,eAAAM,EAAA,4DAKP,WAFTN,EADFC,OAAUC,OAIV0B,EAAW,IAAI9C,EAAiBE,KAAK6C,oBANnB,SAQd9C,EAAY+C,gBAAgBF,GAAUN,MAAK,SAACC,GAC5CA,EAASQ,mBAAmBC,WAC9B5B,EAAWmB,EAASlB,SAVJ,2CAAH,sDAenB,OACE,qBAAK4B,UAAU,cAAf,SACE,sBAAKA,UAAU,YAAf,UACE,uBAAMd,SAAUA,EAAUc,UAAU,aAApC,UACE,uBACE/B,KAAK,QACLgC,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRjC,MAAOZ,EACPQ,SAAUA,EACVkC,UAAU,aAEZ,uBACE/B,KAAK,WACLgC,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRjC,MAAOV,EACPM,SAAUA,EACVkC,UAAU,aAEZ,uBACEC,KAAK,SACL/B,MAAOR,EAAa,UAAY,SAChCsC,UAAU,oBAGbpC,GAAS,qBAAKoC,UAAU,cAAf,SAA8BpC,IACxC,sBAAMwC,QA7CU,kBAAMzC,GAAc,SAAC0C,GAAD,OAAWA,MA6CjBL,UAAU,gBAAxC,SACGtC,EAAa,SAAW,mBAE3B,sBAAKsC,UAAU,WAAf,UACE,wBACE/B,KAAK,SACLmC,QAASV,EACTM,UAAU,eAHZ,yBAOA,yDClFKM,G,MA5BF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACjBC,EAAa,uCAAG,sBAAApC,EAAA,0DACTqC,OAAOC,QAAQ,qDADN,gCAGZ3D,EAAUuB,IAAV,eAAsBgC,EAAQK,KAAMC,SAHxB,uBAIZ3D,EAAe4D,WAAWP,EAAQQ,eAAeF,SAJrC,2CAAH,qDAQnB,OACE,sBAAKb,UAAU,WAAf,UACE,qBAAKA,UAAU,UAAf,SAA0BO,EAAQS,WAClC,qBAAKhB,UAAU,UAAf,SAA0BO,EAAQU,qBAClC,qBACEC,IAAKX,EAAQQ,cACbI,MAAM,QACNC,OAAO,QACPC,IAAI,SAELb,GACC,qBAAKR,UAAU,SAAf,SACE,sBAAMI,QAASK,EAAf,0B,QCoHKa,EAxII,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACElE,mBAAS,IADX,mBAC3BmE,EAD2B,KACfC,EADe,OAEFpE,mBAAS,IAFP,mBAE3B2D,EAF2B,KAEjBU,EAFiB,OAGMrE,mBAAS,IAHf,mBAG3BsE,EAH2B,KAGbC,EAHa,OAIRvE,mBAAS,kCAJD,mBAI3BwE,EAJ2B,KAIpBC,EAJoB,OAKRzE,mBAAS,IALD,mBAK3B0E,EAL2B,KAKpBC,EALoB,KAM9BC,EAAe,GAiBb/C,EAAQ,uCAAG,WAAOnB,GAAP,qBAAAM,EAAA,6DACfN,EAAMoB,iBAEN2C,EAAS,gCAEHI,EAAYC,SAASC,cAAc,oBAC/BC,aAAa,YAAY,GAC7BC,EAAgBpF,EACnBqF,MACAC,MAFmB,UAEVjB,EAAQ/C,IAFE,YAEKiE,gBATZ,SAUQH,EAAcI,UAAUlB,EAAY,YAV5C,cAUTmB,EAVS,iBAWaA,EAASJ,IAAIK,iBAX1B,eAWT7B,EAXS,OAYf8B,QAAQC,IAAI/B,GAZG,UAaT/D,EAAUsB,WAAW,QAAQyE,IAAI,CACrCrE,UAAWC,KAAKC,MAChBoE,UAAWzB,EAAQ/C,IACnByC,mBAAoBM,EAAQ1C,YAC5BkC,gBACAC,aAlBa,QAoBfiC,IACAnB,EAAS,kCACTI,EAAUgB,gBAAgB,YAtBX,4CAAH,sDAwBRD,EAAkB,WACtBxB,EAAc,IACDU,SAASC,cAAc,oBAC/BlE,MAAQ,IAGTiF,EAAc,SAACC,GACnB,IAAMC,EAAU,IAAI1E,KAAKyE,EAAK1E,WAG1B4E,EAFUD,EAAQE,WAAa,EAET,SADdF,EAAQG,UACkB,SACtC,GAAIvB,IAAiBqB,EAGnB,OADArB,EAAeqB,EACRA,GAmCX,OA/BAG,qBAAU,WACR,IACMC,GADQ,IAAI/E,MACEgF,WAChBD,GAAS,IACX9B,EAAgB,8BAChBF,EAAY,aACHgC,GAAS,IAClB9B,EAAgB,8BAChBF,EAAY,aACHgC,GAAS,IAClB9B,EAAgB,+BAChBF,EAAY,cAEZS,SAASyB,eAAe,kBAAkBC,UAAW,EACrDjC,EAAgB,wGAChBF,EAAY,eAGd1E,EACGsB,WAAW,QACXwF,MAAM,YAAa,KAAMvC,EAAQ/C,KACjCuF,QAAQ,YAAa,QACrBC,YAAW,SAAC1E,GACX,IAAM2E,EAAY3E,EAAS4E,KAAKC,KAAI,SAAC5F,GAAD,oBAClCqC,GAAIrC,EAAIqC,IACLrC,EAAI6F,WAETpC,EAASiC,QAEZ,CAAC1C,EAAQ/C,MAGV,qCACE,oBAAIwB,UAAU,QAAd,6CACA,6BAAK2B,IACL,uBAAMzC,SAAUA,EAAhB,UACE,uBAAOmF,QAAQ,EAAMC,aAActD,IACnC,uBACEf,KAAK,OACLsE,OAAO,UACPzG,SAjGmB,SAACC,GAAW,IAI/ByG,EADFzG,EADFC,OAAUyG,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IAElBC,EACfD,EADFE,cAAiBD,OAEnBrD,EAAcqD,IAEhBJ,EAAOM,cAAcR,IAsFfrE,UAAQ,IAEV,uBACES,GAAG,iBACHX,KAAK,SACL/B,MAAM,qBACN+G,QAAQ,SACRpB,UAAU,IAEXrC,GACC,gCACE,qBAAKN,IAAKM,EAAYL,MAAM,OAAOC,OAAO,OAAOC,IAAI,SACrD,wBAAQjB,QAhGQ,kBAAM6C,KAgGtB,yBAIN,6BAAKpB,IACL,8BACGE,EAAMoC,KAAI,SAACf,GAAD,OACT,gCACGD,EAAYC,IACX,qBAAKpD,UAAU,iBAAf,SAAiCiC,IAEnC,cAAC,EAAD,CAAM1B,QAAS6C,EAAM5C,QAAS4C,EAAKJ,YAAczB,EAAQ/C,QAJjD4E,EAAKxC,aC8DVsE,G,MA1LI,SAAC,GAA4B,IAA1B3D,EAAyB,EAAzBA,QAAS4D,EAAgB,EAAhBA,UACvBC,EAAUC,cAD6B,EAEThI,mBAAS,OAFA,mBAEtCiI,EAFsC,KAE1BC,EAF0B,OAGnBlI,mBAAS,IAHU,mBAGtC0E,EAHsC,KAG/BC,EAH+B,OAInB3E,mBAAS,IAJU,mBAItCmI,EAJsC,KAI/BC,EAJ+B,OAKLpI,mBAAS,IALJ,mBAKtCqI,EALsC,KAKxBC,EALwB,OAMTtI,mBAAS,IANA,mBAMtCuI,EANsC,KAM1BC,EAN0B,KAOzC5D,EAAe,GAEb6D,EAAiBC,uBAAY,WACf,WAAdZ,GAAwC,cAAdA,GAC5BC,EAAQY,KAAK,OAEd,CAACb,EAAWC,IAETa,EAAoB,SAAClI,GAAW,IAExBmI,EACRnI,EADFC,OAAUkI,UAEM,6BAAdA,EACFX,EAAc,OACS,uBAAdW,EACTX,EAAc,QACS,uBAAdW,GACTX,EAAc,SAWZrG,EAAQ,uCAAG,WAAOnB,GAAP,SAAAM,EAAA,sDACf2D,EAAS,IACT2D,EAAgB,IAChBF,EAAS,IACT1H,EAAMoB,iBAMNgH,EALa,CACXnI,OAAQ,CACNkI,UAAWN,KAPA,2CAAH,sDAmDRO,EAAe,SAACpI,GAAW,IAEnBmI,EACRnI,EADFC,OAAUkI,UAEZP,EAAgBO,GAChBlJ,EACGsB,WAAW,QACXwF,MAAM,qBAAsB,KAAMoC,GAClCnC,QAAQ,YAAa,QACrBqC,MACA/G,MAAK,SAACC,GACL,IAAI2E,EAAY,GAChB3E,EAAS+G,SAAQ,SAAC9H,GAChB0F,EAAU+B,KAAV,aACEpF,GAAIrC,EAAIqC,IACLrC,EAAI6F,YAGXpC,EAASiC,OAaTd,EAAc,SAACC,GACnB,IAAMC,EAAU,IAAI1E,KAAKyE,EAAK1E,WAG1B4E,EAFUD,EAAQE,WAAa,EAET,SADdF,EAAQG,UACkB,SACtC,GAAIvB,IAAiBqB,EAGnB,OADArB,EAAeqB,EACRA,GAkBX,OAdAG,qBAAU,WACRqC,MACC,CAACA,IAEJrC,qBAAU,WACW,QAAf6B,GArFJG,EAAS,IACTE,EAAgB,IAChB3I,EACGsB,WAAW,QACXyF,QAAQ,YAAa,QACrBqC,MACA/G,MAAK,SAACC,GACL,IAAI2E,EAAY,GAChB3E,EAAS+G,SAAQ,SAAC9H,GAChB0F,EAAU+B,KAAV,aACEpF,GAAIrC,EAAIqC,IACLrC,EAAI6F,YAGXpC,EAASiC,OAyEa,SAAfqB,GApEXtD,EAAS,IACT2D,EAAgB,IAChB3I,EACGsB,WAAW,YACXyF,QAAQ,cAAe,OACvBqC,MACA/G,MAAK,SAACC,GACL,IAAIgH,EAAY,GAChBhH,EAAS+G,SAAQ,SAAC9H,GAChB+H,EAAUN,KAAV,aACEpF,GAAIrC,EAAIqC,IACLrC,EAAI6F,YAGXqB,EAASa,OAwDa,SAAfhB,GA9BO,WAClBtD,EAAS,IACT,IAAMuE,EAAQ,IAAI5H,KAGd2E,EAFUiD,EAAMhD,WAAa,EAEP,SADdgD,EAAM/C,UACoB,SACtCX,QAAQC,IAAIQ,GAyBVkD,KAED,CAAClB,IAGF,sBAAKtF,UAAU,aAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKI,QAAS6F,EAAmBjG,UAAU,UAA3C,sCAGA,qBAAKI,QAAS6F,EAAmBjG,UAAU,UAA3C,gCAGA,qBAAKI,QAAS6F,EAAmBjG,UAAU,UAA3C,gCAGA,uBAAMd,SAAUA,EAAhB,UACE,uBACEe,KAAK,OACLE,UAAQ,EACRH,UAAU,aACVlC,SApIO,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZ2H,EAAc3H,IAiINA,MAAO0H,IAET,uBAAO3F,KAAK,SAAS/B,MAAM,eAAK8B,UAAU,qBAG9C,gCACGwF,EAAMrB,KAAI,SAAC/F,GAAD,OACT,sBAAoBgC,QAAS+F,EAAcnG,UAAU,WAArD,SACG5B,EAAKS,aADGT,EAAKwC,OAIjB8E,GAAgB,qBAAK1F,UAAU,eAAf,SAA+B0F,IAC/C3D,EAAMoC,KAAI,SAACf,GAAD,OACT,gCACGD,EAAYC,IACX,qBAAKpD,UAAU,iBAAf,SAAiCiC,IAEnC,cAAC,EAAD,CAAM1B,QAAS6C,EAAM5C,QAAS4C,EAAKJ,YAAczB,EAAQ/C,QAJjD4E,EAAKxC,eC5KV6F,EANF,WAAO,IAAD,EACepJ,mBAAS,IADxB,mBACVqJ,EADU,UAEjB,OACE,mCAAGA,EAAW,mDAAYA,KAAkB,uECOjCC,EATF,WACX,OACE,qCACE,2DACA,kEACA,cAAC,EAAD,QC4FSC,G,MAhGA,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAsBrG,GAAc,EAAzB2E,UAAyB,EAAd3E,SAAc,EACtBnD,oBAAS,GADa,mBAC7CyJ,EAD6C,KACpCC,EADoC,OAER1J,mBAAS,IAFD,mBAE7C2J,EAF6C,KAE7BC,EAF6B,OAGF5J,mBAAS,IAHP,mBAG7C6J,EAH6C,KAG1BC,EAH0B,OAId9J,oBAAS,GAJK,mBAI7C+J,EAJ6C,KAIhCC,EAJgC,KAM9CC,EAAgB,WACpBP,GAAW,SAAC1G,GAAD,OAAWA,KACtB4G,EAAkBJ,EAAUU,aAC5BJ,EAAqBN,EAAUW,iBAE3B/G,EAAa,uCAAG,sBAAApC,EAAA,0DACTqC,OAAOC,QAAQ,qDADN,gCAGZ3D,EAAUuB,IAAV,kBAAyBsI,EAAUjG,KAAMC,SAH7B,2CAAH,qDASb/C,EAAW,SAACC,GAAW,IAAD,EAGtBA,EADFC,OAAUC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MAEL,iBAATD,EACFgJ,EAAkB/I,GACA,oBAATD,GACTkJ,EAAqBjJ,IAGnBgB,EAAQ,uCAAG,WAAOnB,GAAP,SAAAM,EAAA,6DACfN,EAAMoB,iBADS,SAETnC,EAAUuB,IAAV,kBAAyBsI,EAAUjG,KAAM9B,OAAO,CACpDyI,YAAaP,EACbQ,eAAgBN,IAJH,OAMfH,GAAW,GANI,2CAAH,sDASd,OACE,mCACGD,EACC,mCACE,uBAAM9G,UAAU,cAAcd,SAAUA,EAAUuI,aAAa,MAA/D,UACE,uBACEzH,UAAU,oBACV/B,KAAK,eACLgC,KAAK,OACLC,YAAY,eACZwH,UAAW,GACXxJ,MAAO8I,EACPlJ,SAAUA,EACVqC,UAAQ,IAEV,0BACEH,UAAU,uBACV/B,KAAK,kBACL0J,KAAK,KACLC,KAAK,IACL1H,YAAY,eACZwH,UAAW,IACXxJ,MAAOgJ,EACPpJ,SAAUA,EACVqC,UAAQ,IAEV,uBAAOF,KAAK,SAAS/B,MAAM,6BAC3B,wBAAQkC,QAASkH,EAAjB,yBAIJ,sBAAKtH,UAAU,SAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,oBAAIA,UAAU,eAAeI,QAxDd,WACzBiH,GAAe,SAAChH,GAAD,OAAWA,MAuDhB,SACGwG,EAAUU,cAEb,8BACG/G,GACC,qCACE,sBAAMJ,QAASkH,EAAf,oBACA,sBAAMlH,QAASK,EAAf,2BAKR,6BAAKoG,EAAU5F,wBAEjB,qBAAKjB,UAAU,kBAAf,SACGoH,GAAe,8BAAMP,EAAUW,0BCS7BK,G,MAhGM,SAAC,GAA4B,IAA1BtG,EAAyB,EAAzBA,QAAS4D,EAAgB,EAAhBA,UAAgB,EACT9H,mBAAS,IADA,mBACxCkK,EADwC,KAC3BO,EAD2B,OAEHzK,mBAAS,IAFN,mBAExCmK,EAFwC,KAExBO,EAFwB,OAGjB1K,mBAAS,IAHQ,mBAGxC2K,EAHwC,KAG/BC,EAH+B,OAIb5K,oBAAS,GAJI,mBAIxC6K,EAJwC,KAI7BC,EAJ6B,KAM/C1E,qBAAU,WACRzG,EACGsB,WAAW,WACXyF,QAAQ,YAAa,QACrBC,YAAW,SAAC1E,GACX,IAAM8I,EAAc9I,EAAS4E,KAAKC,KAAI,SAAC5F,GAAD,oBACpCqC,GAAIrC,EAAIqC,IACLrC,EAAI6F,WAET6D,EAAWG,QAEd,IAEH,IAAMlJ,EAAQ,uCAAG,WAAOnB,GAAP,SAAAM,EAAA,6DACfN,EAAMoB,iBADS,SAETnC,EAAUsB,WAAW,WAAWyE,IAAI,CACxCrE,UAAWC,KAAKC,MAChBoE,UAAWzB,EAAQ/C,IACnByC,mBAAoBM,EAAQ1C,YAC5B0I,cACAC,mBAPa,OASfM,EAAe,IACfC,EAAkB,IAClBI,GAAa,GAXE,2CAAH,sDAaRrK,EAAW,SAACC,GAAW,IAAD,EAGtBA,EADFC,OAAUC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MAEL,iBAATD,EACF6J,EAAe5J,GACG,oBAATD,GACT8J,EAAkB7J,IAMtB,OACE,qCACE,oBAAI8B,UAAU,QAAd,uCACgB,WAAdmF,GAAwC,cAAdA,IAC1B,qCACE,sBAAM/E,QARY,WACxB+H,GAAa,SAAC9H,GAAD,OAAWA,MAOlB,gCACC6H,EACC,uBACEhJ,SAAUA,EACVc,UAAU,cACVyH,aAAa,MAHf,UAKE,uBACEzH,UAAU,oBACV/B,KAAK,eACLgC,KAAK,OACLC,YAAY,eACZwH,UAAW,GACXxJ,MAAOqJ,EACPzJ,SAAUA,EACVqC,UAAQ,IAEV,0BACEH,UAAU,uBACV/B,KAAK,kBACL0J,KAAK,KACLC,KAAK,IACL1H,YAAY,eACZwH,UAAW,IACXxJ,MAAOsJ,EACP1J,SAAUA,EACVqC,UAAQ,IAEV,uBAAOF,KAAK,SAAS/B,MAAM,oBAG7B,gCAIL8J,EAAQ7D,KAAI,SAACkE,GAAD,OACX,cAAC,EAAD,CAEExB,UAAWwB,EACXlD,UAAWA,EACX3E,QAAS6H,EAAOrF,YAAczB,EAAQ/C,KAAqB,WAAd2G,GAHxCkD,EAAOzH,YC9CP0H,EA1CC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAahH,EAAc,EAAdA,QACxB6D,EAAUC,cAD4B,EAEAhI,mBAASkE,EAAQ1C,aAFjB,mBAErC2J,EAFqC,KAErBC,EAFqB,KActCvJ,EAAQ,uCAAG,WAAOnB,GAAP,SAAAM,EAAA,yDACfN,EAAMoB,iBACFoC,EAAQ1C,cAAgB2J,EAFb,gCAGPjH,EAAQmH,cAAc,CAC1B7J,YAAa2J,IAJF,uBAMPxL,EAAUuB,IAAV,mBAA0BgD,EAAQ/C,MAAOM,OAAO,CACpDD,YAAa2J,IAPF,OASbD,IATa,2CAAH,sDAad,OACE,qCACE,uBAAMrJ,SAAUA,EAAhB,UACE,uBACEe,KAAK,OACLC,YAAY,qBACZhC,MAAOsK,EACP1K,SA1BS,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZuK,EAAkBvK,MAwBd,uBAAO+B,KAAK,SAAS/B,MAAM,oBAE7B,wBAAQkC,QAlCU,WACpBtD,EAAY6L,UACZvD,EAAQY,KAAK,MAgCX,yBCfS4C,G,MAvBI,SAAC,GAAD,IAAGrH,EAAH,EAAGA,QAAS4D,EAAZ,EAAYA,UAAZ,OACjB,8BACE,+BACE,6BACE,cAAC,IAAD,CAAM0D,GAAG,IAAT,4BAEF,6BACE,eAAC,IAAD,CAAMA,GAAG,WAAT,UAAqBtH,EAAQ1C,YAA7B,iCAEF,6BACE,cAAC,IAAD,CAAMgK,GAAG,UAAT,wCAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,QAAT,mCAEc,WAAd1D,GAAwC,cAAdA,IAC1B,6BACE,cAAC,IAAD,CAAM0D,GAAG,cAAT,sDCwBKC,EAnCG,SAAC,GAAyC,IAAvCP,EAAsC,EAAtCA,YAAahH,EAAyB,EAAzBA,QAAS4D,EAAgB,EAAhBA,UACzC,OACE,cAAC,IAAD,UACE,sBAAKnF,UAAU,WAAf,UACGuB,GAAW,cAAC,EAAD,CAAYA,QAASA,EAAS4D,UAAWA,IACrD,cAAC,IAAD,UACG5D,EACC,qCACE,cAAC,IAAD,CAAOwH,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAASzH,QAASA,EAASgH,YAAaA,MAE1C,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,CAAczH,QAASA,EAAS4D,UAAWA,MAE7C,cAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,EAAD,CAAYzH,QAASA,MAEvB,cAAC,IAAD,CAAOwH,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC,EAAD,CAAYzH,QAASA,EAAS4D,UAAWA,SAI7C,cAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,cCoCCC,MApEf,WAAgB,IAAD,EACW5L,oBAAS,GADpB,mBACN6L,EADM,KACAC,EADA,OAEiB9L,mBAAS,MAF1B,mBAENkE,EAFM,KAEG6H,EAFH,OAGqB/L,mBAAS,QAH9B,mBAGN8H,EAHM,KAGKkE,EAHL,KAKPC,EAAQ,uCAAG,WAAO9K,GAAP,uBAAAH,EAAA,sEACYrB,EAAUsB,WAAW,QAAQ8H,MADzC,8BACgDlC,KAAKC,KAClE,SAAC5F,GAAD,oBACEqC,GAAIrC,EAAIqC,IACLrC,EAAI6F,WAJI,OACTmF,EADS,SASXA,EADF,GAAKC,EARQ,EAQRA,OAAQC,EARA,EAQAA,UAAW1K,EARX,EAQWA,SARX,EAQqBX,KAG3BsL,SAASlL,GAChB6K,EAAa,QACJI,EAAUC,SAASlL,GAC5B6K,EAAa,aACJG,EAAOE,SAASlL,GACzB6K,EAAa,UACJtK,EAAS2K,SAASlL,GAC3B6K,EAAa,YAEbA,EAAa,UApBA,2CAAH,sDAgDd,OAzBA5F,qBAAU,WACR3G,EAAY6M,oBAAmB,SAACvL,GAC1BA,GACFgL,EAAW,CACTvK,YAAaT,EAAKS,YAClBL,IAAKJ,EAAKI,IACVkK,cAAe,SAACkB,GAAD,OAAUxL,EAAKsK,cAAckB,MAE9CN,EAASlL,EAAKI,MAEd4K,EAAW,MAEbD,GAAQ,QAET,IAYD,mCACGD,EACC,cAAC,EAAD,CACEX,YAbY,WAClB,IAAMnK,EAAOtB,EAAY+M,YACzBT,EAAW,CACTvK,YAAaT,EAAKS,YAClBL,IAAKJ,EAAKI,IACVkK,cAAe,SAACkB,GAAD,OAAUxL,EAAKsK,cAAckB,OASxCrI,QAASA,EACT4D,UAAWA,IAGb,e,MC7DR2E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7H,SAASyB,eAAe,W","file":"static/js/main.7cce6a27.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService, dbService, firebaseInstance } from \"services/fbase\";\nimport React, { useState } from \"react\";\nimport \"styles/Auth.css\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const logindbAdd = async (user) => {\n    await dbService.collection(\"userList\").doc(`${user.uid}`).set({\n      createdAt: Date.now(),\n      email: user.email,\n      displayName: user.displayName,\n    });\n\n    dbService\n      .collection(\"role\")\n      .doc(\"1vDX1PIOKVkV1EDrqbER\")\n      .update({\n        outsider: firebaseInstance.firestore.FieldValue.arrayUnion(user.uid),\n      });\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService\n          .createUserWithEmailAndPassword(email, password)\n          .then((snapshot) => logindbAdd(snapshot.user));\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      if (error.code === \"auth/wrong-password\") {\n        setError(\"비밀번호가 틀렸습니다.\");\n      } else if (error.code === \"auth/user-not-found\") {\n        setError(\"아이디를 찾을 수 없습니다.\");\n      } else if (error.code === \"auth/email-already-in-use\") {\n        setError(\"이미 존재하는 아이디입니다.\");\n      } else if (error.code === \"auth/weak-password\") {\n        setError(\"비밀번호는 6글자 이상으로 해주세요.\");\n      } else {\n        setError(error.message);\n      }\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    await authService.signInWithPopup(provider).then((snapshot) => {\n      if (snapshot.additionalUserInfo.isNewUser) {\n        logindbAdd(snapshot.user);\n      }\n    });\n  };\n\n  return (\n    <div className=\"login_filed\">\n      <div className=\"login_div\">\n        <form onSubmit={onSubmit} className=\"login_form\">\n          <input\n            name=\"email\"\n            type=\"Email\"\n            placeholder=\"Email\"\n            required\n            value={email}\n            onChange={onChange}\n            className=\"login_id\"\n          />\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            value={password}\n            onChange={onChange}\n            className=\"login_pw\"\n          />\n          <input\n            type=\"submit\"\n            value={newAccount ? \"Sing up\" : \"Log In\"}\n            className=\"login_submit\"\n          />\n        </form>\n        {error && <div className=\"login_error\">{error}</div>}\n        <span onClick={toggleAccount} className=\"changeAccount\">\n          {newAccount ? \"Log In\" : \"Create Account\"}\n        </span>\n        <div className=\"atherBtn\">\n          <button\n            name=\"google\"\n            onClick={onSocialClick}\n            className=\"login_google\"\n          >\n            With Google\n          </button>\n          <button>With None</button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React from \"react\";\nimport { dbService, storageService } from \"services/fbase\";\nimport \"styles/Flag.css\";\n\nconst Flag = ({ flagObj, isOwner }) => {\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`flag/${flagObj.id}`).delete();\n      await storageService.refFromURL(flagObj.attachmentUrl).delete();\n    }\n  };\n\n  return (\n    <div className=\"flag_box\">\n      <div className=\"fb_time\">{flagObj.flagTime}</div>\n      <div className=\"fb_name\">{flagObj.creatorDisplayName}</div>\n      <img\n        src={flagObj.attachmentUrl}\n        width=\"200px\"\n        height=\"200px\"\n        alt=\"flag\"\n      />\n      {isOwner && (\n        <div className=\"fb_btn\">\n          <span onClick={onDeleteClick}>[del]</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Flag;\n","import Flag from \"components/Flag\";\nimport React, { useEffect, useState } from \"react\";\nimport { dbService, storageService } from \"services/fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst FlagBorder = ({ userObj }) => {\n  const [attachment, setAttachment] = useState(\"\");\n  const [flagTime, setFlagTime] = useState(\"\");\n  const [flagViewTime, setFlagViewTime] = useState(\"\");\n  const [state, setState] = useState(\"업로드대기\");\n  const [flags, setFlags] = useState([]);\n  let lastMonthDay = \"\";\n\n  const onAttachmentChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => clearAttachment();\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    setState(\"업로드중...\");\n\n    const uploadBtn = document.querySelector(\"#upload_img_btn\");\n    uploadBtn.setAttribute(\"disabled\", true);\n    const attachmentRef = storageService\n      .ref()\n      .child(`${userObj.uid}/${uuidv4()}`);\n    const response = await attachmentRef.putString(attachment, \"data_url\");\n    const attachmentUrl = await response.ref.getDownloadURL();\n    console.log(attachmentUrl);\n    await dbService.collection(\"flag\").add({\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      creatorDisplayName: userObj.displayName,\n      attachmentUrl,\n      flagTime,\n    });\n    clearAttachment();\n    setState(\"업로드완료\");\n    uploadBtn.removeAttribute(\"disabled\");\n  };\n  const clearAttachment = () => {\n    setAttachment(\"\");\n    const file = document.querySelector(\"input[type=file]\");\n    file.value = \"\";\n  };\n\n  const getMonthDay = (flag) => {\n    const flagDay = new Date(flag.createdAt);\n    const month = flagDay.getMonth() + 1;\n    const day = flagDay.getDate();\n    let flagFormmat = month + \"월\" + day + \"일\";\n    if (lastMonthDay === flagFormmat) {\n    } else {\n      lastMonthDay = flagFormmat;\n      return flagFormmat;\n    }\n  };\n\n  useEffect(() => {\n    const today = new Date();\n    const hours = today.getHours();\n    if (hours >= 21) {\n      setFlagViewTime(\"플래그 9시\");\n      setFlagTime(\"21시\");\n    } else if (hours >= 19) {\n      setFlagViewTime(\"플래그 7시\");\n      setFlagTime(\"19시\");\n    } else if (hours >= 12) {\n      setFlagViewTime(\"플래그 12시\");\n      setFlagTime(\"12시\");\n    } else {\n      document.getElementById(\"upload_img_btn\").disabled = true;\n      setFlagViewTime(\"날짜가 변경되어 업로드를 중단합니다.\");\n      setFlagTime(\"flagNoTime\");\n    }\n\n    dbService\n      .collection(\"flag\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const flagArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setFlags(flagArray);\n      });\n  }, [userObj.uid]);\n\n  return (\n    <>\n      <h1 className=\"title\">플래그 인증</h1>\n      <h4>{flagViewTime}</h4>\n      <form onSubmit={onSubmit}>\n        <input hidden={true} defaultValue={flagTime} />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onAttachmentChange}\n          required\n        />\n        <input\n          id=\"upload_img_btn\"\n          type=\"submit\"\n          value=\"업로드\"\n          capture=\"camera\"\n          disabled={false}\n        />\n        {attachment && (\n          <div>\n            <img src={attachment} width=\"50px\" height=\"50px\" alt=\"flag\" />\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n      </form>\n      <h4>{state}</h4>\n      <div>\n        {flags.map((flag) => (\n          <div key={flag.id}>\n            {getMonthDay(flag) && (\n              <div className=\"flag_month_day\">{lastMonthDay}</div>\n            )}\n            <Flag flagObj={flag} isOwner={flag.creatorId === userObj.uid} />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\nexport default FlagBorder;\n","import Flag from \"components/Flag\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { dbService } from \"services/fbase\";\nimport \"styles/FlagSearch.css\";\n\nconst FlagSearch = ({ userObj, authority }) => {\n  const history = useHistory();\n  const [searchType, setSearchType] = useState(\"all\");\n  const [flags, setFlags] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  const [searchText, setSearchText] = useState(\"\");\n  let lastMonthDay = \"\";\n\n  const checkAuthority = useCallback(() => {\n    if (authority !== \"master\" && authority !== \"submaster\") {\n      history.push(\"/\");\n    }\n  }, [authority, history]);\n\n  const onSearchMenuClick = (event) => {\n    const {\n      target: { innerHTML },\n    } = event;\n    if (innerHTML === \"전체보기\") {\n      setSearchType(\"all\");\n    } else if (innerHTML === \"유저별\") {\n      setSearchType(\"user\");\n    } else if (innerHTML === \"시간별\") {\n      setSearchType(\"time\");\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSearchText(value);\n  };\n\n  const onSubmit = async (event) => {\n    setFlags([]);\n    setSelectedUser(\"\");\n    setUsers([]);\n    event.preventDefault();\n    const test = {\n      target: {\n        innerHTML: searchText,\n      },\n    };\n    onSelectUser(test);\n  };\n\n  const searchAll = () => {\n    setUsers([]);\n    setSelectedUser(\"\");\n    dbService\n      .collection(\"flag\")\n      .orderBy(\"createdAt\", \"desc\")\n      .get()\n      .then((snapshot) => {\n        let flagArray = [];\n        snapshot.forEach((doc) => {\n          flagArray.push({\n            id: doc.id,\n            ...doc.data(),\n          });\n        });\n        setFlags(flagArray);\n      });\n  };\n\n  const getUserList = () => {\n    setFlags([]);\n    setSelectedUser(\"\");\n    dbService\n      .collection(\"userList\")\n      .orderBy(\"displayName\", \"asc\")\n      .get()\n      .then((snapshot) => {\n        let userArray = [];\n        snapshot.forEach((doc) => {\n          userArray.push({\n            id: doc.id,\n            ...doc.data(),\n          });\n        });\n        setUsers(userArray);\n      });\n  };\n\n  const onSelectUser = (event) => {\n    const {\n      target: { innerHTML },\n    } = event;\n    setSelectedUser(innerHTML);\n    dbService\n      .collection(\"flag\")\n      .where(\"creatorDisplayName\", \"==\", innerHTML)\n      .orderBy(\"createdAt\", \"desc\")\n      .get()\n      .then((snapshot) => {\n        let flagArray = [];\n        snapshot.forEach((doc) => {\n          flagArray.push({\n            id: doc.id,\n            ...doc.data(),\n          });\n        });\n        setFlags(flagArray);\n      });\n  };\n\n  const getTimeList = () => {\n    setFlags([]);\n    const today = new Date();\n    const month = today.getMonth() + 1;\n    const day = today.getDate();\n    let flagFormmat = month + \"월\" + day + \"일\";\n    console.log(flagFormmat);\n  };\n\n  const getMonthDay = (flag) => {\n    const flagDay = new Date(flag.createdAt);\n    const month = flagDay.getMonth() + 1;\n    const day = flagDay.getDate();\n    let flagFormmat = month + \"월\" + day + \"일\";\n    if (lastMonthDay === flagFormmat) {\n    } else {\n      lastMonthDay = flagFormmat;\n      return flagFormmat;\n    }\n  };\n\n  useEffect(() => {\n    checkAuthority();\n  }, [checkAuthority]);\n\n  useEffect(() => {\n    if (searchType === \"all\") {\n      searchAll();\n    } else if (searchType === \"user\") {\n      getUserList();\n    } else if (searchType === \"time\") {\n      getTimeList();\n    }\n  }, [searchType]);\n\n  return (\n    <div className=\"flagSearch\">\n      <div className=\"fs_header\">\n        <div onClick={onSearchMenuClick} className=\"fs_menu\">\n          전체보기\n        </div>\n        <div onClick={onSearchMenuClick} className=\"fs_menu\">\n          유저별\n        </div>\n        <div onClick={onSearchMenuClick} className=\"fs_menu\">\n          시간별\n        </div>\n        <form onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            required\n            className=\"search_box\"\n            onChange={onChange}\n            value={searchText}\n          />\n          <input type=\"submit\" value=\"검색\" className=\"search_btn\" />\n        </form>\n      </div>\n      <div>\n        {users.map((user) => (\n          <span key={user.id} onClick={onSelectUser} className=\"userList\">\n            {user.displayName}\n          </span>\n        ))}\n        {selectedUser && <div className=\"selectedUser\">{selectedUser}</div>}\n        {flags.map((flag) => (\n          <div key={flag.id}>\n            {getMonthDay(flag) && (\n              <div className=\"flag_month_day\">{lastMonthDay}</div>\n            )}\n            <Flag flagObj={flag} isOwner={flag.creatorId === userObj.uid} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FlagSearch;\n","import React, { useState } from \"react\";\n\nconst Suro = () => {\n  const [suroTime, setSuroTime] = useState(\"\");\n  return (\n    <>{suroTime ? <div>수로 => {suroTime}</div> : <div>수로투표중...</div>}</>\n  );\n};\nexport default Suro;\n","import React from \"react\";\nimport Suro from \"./Suro\";\n\nconst Home = () => {\n  return (\n    <>\n      <div>공지사항</div>\n      <div>플래그 인증</div>\n      <Suro />\n    </>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { dbService } from \"services/fbase\";\nimport \"styles/Notice.css\";\n\nconst Notice = ({ noticeObj, authority, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNoticeTitle, setNewNoticeTitle] = useState(\"\");\n  const [newNoticeContents, setNewNoticeContents] = useState(\"\");\n  const [contentView, setContentView] = useState(false);\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n    setNewNoticeTitle(noticeObj.noticeTitle);\n    setNewNoticeContents(noticeObj.noticeContents);\n  };\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`notices/${noticeObj.id}`).delete();\n    }\n  };\n  const onToggleTitleClick = () => {\n    setContentView((prev) => !prev);\n  };\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"notice_title\") {\n      setNewNoticeTitle(value);\n    } else if (name === \"notice_contents\") {\n      setNewNoticeContents(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`notices/${noticeObj.id}`).update({\n      noticeTitle: newNoticeTitle,\n      noticeContents: newNoticeContents,\n    });\n    setEditing(false);\n  };\n\n  return (\n    <>\n      {editing ? (\n        <>\n          <form className=\"notice_form\" onSubmit={onSubmit} autoComplete=\"off\">\n            <input\n              className=\"notice_form_title\"\n              name=\"notice_title\"\n              type=\"text\"\n              placeholder=\"제목\"\n              maxLength={14}\n              value={newNoticeTitle}\n              onChange={onChange}\n              required\n            />\n            <textarea\n              className=\"notice_form_contents\"\n              name=\"notice_contents\"\n              cols=\"40\"\n              rows=\"8\"\n              placeholder=\"내용\"\n              maxLength={500}\n              value={newNoticeContents}\n              onChange={onChange}\n              required\n            />\n            <input type=\"submit\" value=\"수정하기\" />\n            <button onClick={toggleEditing}>cancel</button>\n          </form>\n        </>\n      ) : (\n        <div className=\"notice\">\n          <div className=\"notice_header\">\n            <div className=\"notice_title_and_button\">\n              <h4 className=\"notice_title\" onClick={onToggleTitleClick}>\n                {noticeObj.noticeTitle}\n              </h4>\n              <div>\n                {isOwner && (\n                  <>\n                    <span onClick={toggleEditing}>[edit]</span>\n                    <span onClick={onDeleteClick}>[del]</span>\n                  </>\n                )}\n              </div>\n            </div>\n            <h4>{noticeObj.creatorDisplayName}</h4>\n          </div>\n          <div className=\"notice_contents\">\n            {contentView && <pre>{noticeObj.noticeContents}</pre>}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Notice;\n","import Notice from \"components/Notice\";\nimport React, { useEffect, useState } from \"react\";\nimport { dbService } from \"services/fbase\";\nimport \"styles/NoticeBorder.css\";\n\nconst NoticeBorder = ({ userObj, authority }) => {\n  const [noticeTitle, setNoticeTitle] = useState(\"\");\n  const [noticeContents, setNoticeContents] = useState(\"\");\n  const [notices, setNotices] = useState([]);\n  const [newNotice, setNewNotice] = useState(false);\n\n  useEffect(() => {\n    dbService\n      .collection(\"notices\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const noticeArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNotices(noticeArray);\n      });\n  }, []);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.collection(\"notices\").add({\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      creatorDisplayName: userObj.displayName,\n      noticeTitle,\n      noticeContents,\n    });\n    setNoticeTitle(\"\");\n    setNoticeContents(\"\");\n    setNewNotice(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"notice_title\") {\n      setNoticeTitle(value);\n    } else if (name === \"notice_contents\") {\n      setNoticeContents(value);\n    }\n  };\n  const toggleNoticeWrite = () => {\n    setNewNotice((prev) => !prev);\n  };\n  return (\n    <>\n      <h1 className=\"title\">공지사항</h1>\n      {(authority === \"master\" || authority === \"submaster\") && (\n        <>\n          <span onClick={toggleNoticeWrite}>글쓰기</span>\n          {newNotice ? (\n            <form\n              onSubmit={onSubmit}\n              className=\"notice_form\"\n              autoComplete=\"off\"\n            >\n              <input\n                className=\"notice_form_title\"\n                name=\"notice_title\"\n                type=\"text\"\n                placeholder=\"제목\"\n                maxLength={60}\n                value={noticeTitle}\n                onChange={onChange}\n                required\n              />\n              <textarea\n                className=\"notice_form_contents\"\n                name=\"notice_contents\"\n                cols=\"40\"\n                rows=\"8\"\n                placeholder=\"내용\"\n                maxLength={500}\n                value={noticeContents}\n                onChange={onChange}\n                required\n              />\n              <input type=\"submit\" value=\"저장\" />\n            </form>\n          ) : (\n            <></>\n          )}\n        </>\n      )}\n      {notices.map((notice) => (\n        <Notice\n          key={notice.id}\n          noticeObj={notice}\n          authority={authority}\n          isOwner={notice.creatorId === userObj.uid || authority === \"master\"}\n        />\n      ))}\n    </>\n  );\n};\nexport default NoticeBorder;\n","import { authService, dbService } from \"services/fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      await dbService.doc(`userList/${userObj.uid}`).update({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"닉네임\"\n          value={newDisplayName}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"수정\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"styles/Nav.css\";\n\nconst Navigation = ({ userObj, authority }) => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">메인</Link>\n      </li>\n      <li>\n        <Link to=\"/profile\">{userObj.displayName}의 프로필</Link>\n      </li>\n      <li>\n        <Link to=\"/notice\">공지사항</Link>\n      </li>\n      <li>\n        <Link to=\"/flag\">플래그</Link>\n      </li>\n      {(authority === \"master\" || authority === \"submaster\") && (\n        <li>\n          <Link to=\"/flagSearch\">플래그 조회</Link>\n        </li>\n      )}\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport FlagBorder from \"routes/FlagBorder\";\nimport FlagSearch from \"routes/FlagSearch\";\nimport Home from \"routes/Home\";\nimport NoticeBorder from \"routes/NoticeBorder\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ refreshUser, userObj, authority }) => {\n  return (\n    <Router>\n      <div className=\"contents\">\n        {userObj && <Navigation userObj={userObj} authority={authority} />}\n        <Switch>\n          {userObj ? (\n            <>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n              <Route exact path=\"/notice\">\n                <NoticeBorder userObj={userObj} authority={authority} />\n              </Route>\n              <Route exact path=\"/flag\">\n                <FlagBorder userObj={userObj} />\n              </Route>\n              <Route exact path=\"/flagSearch\">\n                <FlagSearch userObj={userObj} authority={authority} />\n              </Route>\n            </>\n          ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )}\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Routes\";\nimport { authService, dbService } from \"services/fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [authority, setAuthority] = useState(\"user\");\n\n  const getRoles = async (uid) => {\n    const roles = await (await dbService.collection(\"role\").get()).docs.map(\n      (doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      })\n    );\n    const {\n      0: { master, submaster, outsider, user },\n    } = roles;\n\n    if (user.includes(uid)) {\n      setAuthority(\"user\");\n    } else if (submaster.includes(uid)) {\n      setAuthority(\"submaster\");\n    } else if (master.includes(uid)) {\n      setAuthority(\"master\");\n    } else if (outsider.includes(uid)) {\n      setAuthority(\"outsider\");\n    } else {\n      setAuthority(\"noting\");\n    }\n  };\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        getRoles(user.uid);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          userObj={userObj}\n          authority={authority}\n        />\n      ) : (\n        \"Loding...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"styles/Index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}