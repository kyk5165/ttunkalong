{"version":3,"sources":["services/fbase.js","routes/Auth.js","components/Flag.js","routes/FlagBorder.js","routes/FlagSearch.js","routes/Suro.js","routes/Home.js","components/Notice.js","routes/NoticeBorder.js","routes/Profile.js","components/Navigation.js","components/Routes.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","logindbAdd","user","a","collection","doc","uid","set","createdAt","Date","now","displayName","onSubmit","preventDefault","createUserWithEmailAndPassword","then","snapshot","signInWithEmailAndPassword","code","message","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","additionalUserInfo","isNewUser","className","type","placeholder","required","onClick","prev","Flag","flagObj","isOwner","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentUrl","flagTime","src","width","height","alt","FlagBorder","userObj","attachment","setAttachment","setFlagTime","flagViewTime","setFlagViewTime","state","setState","flags","setFlags","uploadBtn","document","querySelector","setAttribute","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","console","log","add","creatorId","creatorDisplayName","clearAttachment","removeAttribute","useEffect","today","hours","getHours","flagFormmat","getMonth","getDate","where","orderBy","onSnapshot","flagArray","docs","map","data","hidden","defaultValue","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","capture","disabled","flag","FlagSearch","authority","history","useHistory","searchType","setSearchType","users","setUsers","selectedUser","setSelectedUser","checkAuthority","useCallback","push","onSearchMenuClick","innerHTML","onSelectUser","get","forEach","userArray","Suro","suroTime","Home","Notice","noticeObj","editing","setEditing","newNoticeTitle","setNewNoticeTitle","newNoticeContents","setNewNoticeContents","contentView","setContentView","toggleEditing","noticeTitle","noticeContents","update","autoComplete","maxLength","cols","rows","NoticeBorder","setNoticeTitle","setNoticeContents","notices","setNotices","newNotice","setNewNotice","noticeArray","notice","Profile","refreshUser","newDisplayName","setNewDisplayName","updateProfile","signOut","Navigation","to","AppRouter","exact","path","App","init","setInit","setUserObj","setAuthority","getRoles","roles","master","submaster","outsider","includes","onAuthStateChanged","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e7ff53fe.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService, dbService, firebaseInstance } from \"services/fbase\";\nimport React, { useState } from \"react\";\nimport \"styles/Auth.css\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const logindbAdd = async (user) => {\n    await dbService.collection(\"userList\").doc(`${user.uid}`).set({\n      createdAt: Date.now(),\n      email: user.email,\n      displayName: user.displayName,\n    });\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService\n          .createUserWithEmailAndPassword(email, password)\n          .then((snapshot) => logindbAdd(snapshot.user));\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      if (error.code === \"auth/wrong-password\") {\n        setError(\"비밀번호가 틀렸습니다.\");\n      } else if (error.code === \"auth/user-not-found\") {\n        setError(\"아이디를 찾을 수 없습니다.\");\n      } else if (error.code === \"auth/email-already-in-use\") {\n        setError(\"이미 존재하는 아이디입니다.\");\n      } else if (error.code === \"auth/weak-password\") {\n        setError(\"비밀번호는 6글자 이상으로 해주세요.\");\n      } else {\n        setError(error.message);\n      }\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    await authService.signInWithPopup(provider).then((snapshot) => {\n      if (snapshot.additionalUserInfo.isNewUser) {\n        logindbAdd(snapshot.user);\n      }\n    });\n  };\n\n  return (\n    <div className=\"login_filed\">\n      <div className=\"login_div\">\n        <form onSubmit={onSubmit} className=\"login_form\">\n          <input\n            name=\"email\"\n            type=\"Email\"\n            placeholder=\"Email\"\n            required\n            value={email}\n            onChange={onChange}\n            className=\"login_id\"\n          />\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            value={password}\n            onChange={onChange}\n            className=\"login_pw\"\n          />\n          <input\n            type=\"submit\"\n            value={newAccount ? \"Sing up\" : \"Log In\"}\n            className=\"login_submit\"\n          />\n        </form>\n        {error && <div className=\"login_error\">{error}</div>}\n        <span onClick={toggleAccount} className=\"changeAccount\">\n          {newAccount ? \"Log In\" : \"Create Account\"}\n        </span>\n        <div className=\"atherBtn\">\n          <button\n            name=\"google\"\n            onClick={onSocialClick}\n            className=\"login_google\"\n          >\n            With Google\n          </button>\n          <button>With None</button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React from \"react\";\nimport { dbService, storageService } from \"services/fbase\";\n\nconst Flag = ({ flagObj, isOwner }) => {\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`flag/${flagObj.id}`).delete();\n      await storageService.refFromURL(flagObj.attachmentUrl).delete();\n    }\n  };\n  return (\n    <>\n      <div>{flagObj.flagTime}</div>\n      <img\n        src={flagObj.attachmentUrl}\n        width=\"200px\"\n        height=\"200px\"\n        alt=\"flag\"\n      />\n      {isOwner && (\n        <div>\n          <span onClick={onDeleteClick}>[del]</span>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Flag;\n","import Flag from \"components/Flag\";\nimport React, { useEffect, useState } from \"react\";\nimport { dbService, storageService } from \"services/fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst FlagBorder = ({ userObj }) => {\n  const [attachment, setAttachment] = useState(\"\");\n  const [flagTime, setFlagTime] = useState(\"\");\n  const [flagViewTime, setFlagViewTime] = useState(\"\");\n  const [state, setState] = useState(\"업로드대기\");\n  const [flags, setFlags] = useState([]);\n\n  const onAttachmentChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => clearAttachment();\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    setState(\"업로드중...\");\n\n    const uploadBtn = document.querySelector(\"#upload_img_btn\");\n    uploadBtn.setAttribute(\"disabled\", true);\n    const attachmentRef = storageService\n      .ref()\n      .child(`${userObj.uid}/${uuidv4()}`);\n    const response = await attachmentRef.putString(attachment, \"data_url\");\n    const attachmentUrl = await response.ref.getDownloadURL();\n    console.log(attachmentUrl);\n    await dbService.collection(\"flag\").add({\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      creatorDisplayName: userObj.displayName,\n      attachmentUrl,\n      flagTime,\n    });\n    clearAttachment();\n    setState(\"업로드완료\");\n    uploadBtn.removeAttribute(\"disabled\");\n  };\n  const clearAttachment = () => {\n    setAttachment(\"\");\n    const file = document.querySelector(\"input[type=file]\");\n    file.value = \"\";\n  };\n\n  useEffect(() => {\n    const today = new Date();\n    const hours = today.getHours();\n    const month = today.getMonth() + 1;\n    const day = today.getDate();\n    let flagFormmat = month + \"월\" + day + \"일\";\n    if (hours >= 22 || hours < 12) {\n      setFlagViewTime(\"플래그 22시\");\n      setFlagTime(flagFormmat + \"22시\");\n    } else if (hours >= 19) {\n      setFlagViewTime(\"플래그 7시\");\n      setFlagTime(flagFormmat + \"19시\");\n    } else if (hours >= 12) {\n      setFlagViewTime(\"플래그 12시\");\n      setFlagTime(flagFormmat + \"12시\");\n    } else {\n      setFlagViewTime(\"플래그 시간오류\");\n      setFlagTime(\"flagNoTime\");\n    }\n\n    dbService\n      .collection(\"flag\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const flagArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setFlags(flagArray);\n      });\n  }, [userObj.uid]);\n\n  return (\n    <>\n      <h1 className=\"title\">플래그 인증</h1>\n      <h4>{flagViewTime}</h4>\n      <form onSubmit={onSubmit}>\n        <input hidden={true} defaultValue={flagTime} />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onAttachmentChange}\n          required\n        />\n        <input\n          id=\"upload_img_btn\"\n          type=\"submit\"\n          value=\"업로드\"\n          capture=\"camera\"\n          disabled={false}\n        />\n        {attachment && (\n          <div>\n            <img src={attachment} width=\"50px\" height=\"50px\" alt=\"flag\" />\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n      </form>\n      <h4>{state}</h4>\n      {flags.map((flag) => (\n        <Flag\n          key={flag.id}\n          flagObj={flag}\n          isOwner={flag.creatorId === userObj.uid}\n        />\n      ))}\n    </>\n  );\n};\nexport default FlagBorder;\n","import Flag from \"components/Flag\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { dbService } from \"services/fbase\";\nimport \"styles/FlagSearch.css\";\n\nconst FlagSearch = ({ userObj, authority }) => {\n  const history = useHistory();\n  const [searchType, setSearchType] = useState(\"all\");\n  const [flags, setFlags] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(\"\");\n\n  const checkAuthority = useCallback(() => {\n    if (authority !== \"master\" && authority !== \"submaster\") {\n      history.push(\"/\");\n    }\n  }, [authority]);\n\n  const onSearchMenuClick = (event) => {\n    const {\n      target: { innerHTML },\n    } = event;\n    if (innerHTML === \"전체보기\") {\n      setSearchType(\"all\");\n    } else if (innerHTML === \"유저별\") {\n      setSearchType(\"user\");\n    }\n  };\n\n  const searchAll = () => {\n    setUsers([]);\n    setSelectedUser(\"\");\n    dbService\n      .collection(\"flag\")\n      .orderBy(\"createdAt\", \"desc\")\n      .get()\n      .then((snapshot) => {\n        let flagArray = [];\n        snapshot.forEach((doc) => {\n          flagArray.push({\n            id: doc.id,\n            ...doc.data(),\n          });\n        });\n        setFlags(flagArray);\n      });\n  };\n  const getUserList = () => {\n    setFlags([]);\n    dbService\n      .collection(\"userList\")\n      .orderBy(\"displayName\", \"asc\")\n      .get()\n      .then((snapshot) => {\n        let userArray = [];\n        snapshot.forEach((doc) => {\n          userArray.push({\n            id: doc.id,\n            ...doc.data(),\n          });\n        });\n        setUsers(userArray);\n      });\n  };\n  const onSelectUser = (event) => {\n    const {\n      target: { innerHTML },\n    } = event;\n    setSelectedUser(innerHTML);\n    dbService\n      .collection(\"flag\")\n      .where(\"creatorDisplayName\", \"==\", innerHTML)\n      .orderBy(\"createdAt\", \"desc\")\n      .get()\n      .then((snapshot) => {\n        let flagArray = [];\n        snapshot.forEach((doc) => {\n          flagArray.push({\n            id: doc.id,\n            ...doc.data(),\n          });\n        });\n        setFlags(flagArray);\n      });\n  };\n\n  useEffect(() => {\n    checkAuthority();\n  }, [checkAuthority]);\n\n  useEffect(() => {\n    if (searchType === \"all\") {\n      searchAll();\n    } else if (searchType === \"user\") {\n      getUserList();\n    }\n  }, [searchType]);\n\n  return (\n    <div className=\"flagSearch\">\n      <div className=\"fs_header\">\n        <div onClick={onSearchMenuClick} className=\"fs_menu\">\n          전체보기\n        </div>\n        <div onClick={onSearchMenuClick} className=\"fs_menu\">\n          유저별\n        </div>\n        <div onClick={onSearchMenuClick} className=\"fs_menu\">\n          시간별\n        </div>\n        <form>\n          <input type=\"text\" required className=\"search_box\" />\n          <input type=\"submit\" value=\"검색\" className=\"search_btn\" />\n        </form>\n      </div>\n      <div>\n        {users.map((user) => (\n          <span key={user.id} onClick={onSelectUser} className=\"userList\">\n            {user.displayName}\n          </span>\n        ))}\n        {selectedUser && <div className=\"selectedUser\">{selectedUser}</div>}\n        {flags.map((flag) => (\n          <Flag\n            key={flag.id}\n            flagObj={flag}\n            isOwner={flag.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FlagSearch;\n","import React, { useState } from \"react\";\n\nconst Suro = () => {\n  const [suroTime, setSuroTime] = useState(\"\");\n  return (\n    <>{suroTime ? <div>수로 => {suroTime}</div> : <div>수로투표중...</div>}</>\n  );\n};\nexport default Suro;\n","import React from \"react\";\nimport Suro from \"./Suro\";\n\nconst Home = () => {\n  return (\n    <>\n      <div>공지사항</div>\n      <div>플래그 인증</div>\n      <Suro />\n    </>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { dbService } from \"services/fbase\";\nimport \"styles/Notice.css\";\n\nconst Notice = ({ noticeObj, authority, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNoticeTitle, setNewNoticeTitle] = useState(\"\");\n  const [newNoticeContents, setNewNoticeContents] = useState(\"\");\n  const [contentView, setContentView] = useState(false);\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n    setNewNoticeTitle(noticeObj.noticeTitle);\n    setNewNoticeContents(noticeObj.noticeContents);\n  };\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`notices/${noticeObj.id}`).delete();\n    }\n  };\n  const onToggleTitleClick = () => {\n    setContentView((prev) => !prev);\n  };\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"notice_title\") {\n      setNewNoticeTitle(value);\n    } else if (name === \"notice_contents\") {\n      setNewNoticeContents(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`notices/${noticeObj.id}`).update({\n      noticeTitle: newNoticeTitle,\n      noticeContents: newNoticeContents,\n    });\n    setEditing(false);\n  };\n\n  return (\n    <>\n      {editing ? (\n        <>\n          <form className=\"notice_form\" onSubmit={onSubmit} autoComplete=\"off\">\n            <input\n              className=\"notice_form_title\"\n              name=\"notice_title\"\n              type=\"text\"\n              placeholder=\"제목\"\n              maxLength={14}\n              value={newNoticeTitle}\n              onChange={onChange}\n              required\n            />\n            <textarea\n              className=\"notice_form_contents\"\n              name=\"notice_contents\"\n              cols=\"40\"\n              rows=\"8\"\n              placeholder=\"내용\"\n              maxLength={500}\n              value={newNoticeContents}\n              onChange={onChange}\n              required\n            />\n            <input type=\"submit\" value=\"수정하기\" />\n            <button onClick={toggleEditing}>cancel</button>\n          </form>\n        </>\n      ) : (\n        <div className=\"notice\">\n          <div className=\"notice_header\">\n            <div className=\"notice_title_and_button\">\n              <h4 className=\"notice_title\" onClick={onToggleTitleClick}>\n                {noticeObj.noticeTitle}\n              </h4>\n              <div>\n                {isOwner && (\n                  <>\n                    <span onClick={toggleEditing}>[edit]</span>\n                    <span onClick={onDeleteClick}>[del]</span>\n                  </>\n                )}\n              </div>\n            </div>\n            <h4>{noticeObj.creatorDisplayName}</h4>\n          </div>\n          <div className=\"notice_contents\">\n            {contentView && <pre>{noticeObj.noticeContents}</pre>}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Notice;\n","import Notice from \"components/Notice\";\nimport React, { useEffect, useState } from \"react\";\nimport { dbService } from \"services/fbase\";\nimport \"styles/NoticeBorder.css\";\n\nconst NoticeBorder = ({ userObj, authority }) => {\n  const [noticeTitle, setNoticeTitle] = useState(\"\");\n  const [noticeContents, setNoticeContents] = useState(\"\");\n  const [notices, setNotices] = useState([]);\n  const [newNotice, setNewNotice] = useState(false);\n\n  useEffect(() => {\n    dbService\n      .collection(\"notices\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const noticeArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNotices(noticeArray);\n      });\n  }, []);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.collection(\"notices\").add({\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      creatorDisplayName: userObj.displayName,\n      noticeTitle,\n      noticeContents,\n    });\n    setNoticeTitle(\"\");\n    setNoticeContents(\"\");\n    setNewNotice(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"notice_title\") {\n      setNoticeTitle(value);\n    } else if (name === \"notice_contents\") {\n      setNoticeContents(value);\n    }\n  };\n  const toggleNoticeWrite = () => {\n    setNewNotice((prev) => !prev);\n  };\n  return (\n    <>\n      <h1 className=\"title\">공지사항</h1>\n      {(authority === \"master\" || authority === \"submaster\") && (\n        <>\n          <span onClick={toggleNoticeWrite}>글쓰기</span>\n          {newNotice ? (\n            <form\n              onSubmit={onSubmit}\n              className=\"notice_form\"\n              autoComplete=\"off\"\n            >\n              <input\n                className=\"notice_form_title\"\n                name=\"notice_title\"\n                type=\"text\"\n                placeholder=\"제목\"\n                maxLength={60}\n                value={noticeTitle}\n                onChange={onChange}\n                required\n              />\n              <textarea\n                className=\"notice_form_contents\"\n                name=\"notice_contents\"\n                cols=\"40\"\n                rows=\"8\"\n                placeholder=\"내용\"\n                maxLength={500}\n                value={noticeContents}\n                onChange={onChange}\n                required\n              />\n              <input type=\"submit\" value=\"저장\" />\n            </form>\n          ) : (\n            <></>\n          )}\n        </>\n      )}\n      {notices.map((notice) => (\n        <Notice\n          key={notice.id}\n          noticeObj={notice}\n          authority={authority}\n          isOwner={notice.creatorId === userObj.uid || authority === \"master\"}\n        />\n      ))}\n    </>\n  );\n};\nexport default NoticeBorder;\n","import { authService, dbService } from \"services/fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      await dbService.doc(`userList/${userObj.uid}`).update({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"닉네임\"\n          value={newDisplayName}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"수정\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj, authority }) => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">메인</Link>\n      </li>\n      <li>\n        <Link to=\"/profile\">{userObj.displayName}의 프로필</Link>\n      </li>\n      <li>\n        <Link to=\"/notice\">공지사항</Link>\n      </li>\n      <li>\n        <Link to=\"/flag\">플래그</Link>\n      </li>\n      {(authority === \"master\" || authority === \"submaster\") && (\n        <li>\n          <Link to=\"/flagSearch\">플래그 조회</Link>\n        </li>\n      )}\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport FlagBorder from \"routes/FlagBorder\";\nimport FlagSearch from \"routes/FlagSearch\";\nimport Home from \"routes/Home\";\nimport NoticeBorder from \"routes/NoticeBorder\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ refreshUser, userObj, authority }) => {\n  return (\n    <Router>\n      <div className=\"contents\">\n        {userObj && <Navigation userObj={userObj} authority={authority} />}\n        <Switch>\n          {userObj ? (\n            <>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n              <Route exact path=\"/notice\">\n                <NoticeBorder userObj={userObj} authority={authority} />\n              </Route>\n              <Route exact path=\"/flag\">\n                <FlagBorder userObj={userObj} />\n              </Route>\n              <Route exact path=\"/flagSearch\">\n                <FlagSearch userObj={userObj} authority={authority} />\n              </Route>\n            </>\n          ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )}\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Routes\";\nimport { authService, dbService } from \"services/fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [authority, setAuthority] = useState(\"user\");\n\n  const getRoles = async (uid) => {\n    const roles = await (await dbService.collection(\"role\").get()).docs.map(\n      (doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      })\n    );\n    const {\n      0: { master, submaster, outsider, user },\n    } = roles;\n\n    if (user.includes(uid)) {\n      setAuthority(\"user\");\n    } else if (submaster.includes(uid)) {\n      setAuthority(\"submaster\");\n    } else if (master.includes(uid)) {\n      setAuthority(\"master\");\n    }\n  };\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        getRoles(user.uid);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          userObj={userObj}\n          authority={authority}\n        />\n      ) : (\n        \"Loding...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"styles/Index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}