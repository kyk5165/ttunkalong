{"version":3,"sources":["services/fbase.js","routes/Auth.js","components/Flag.js","routes/FlagBorder.js","routes/Suro.js","routes/Home.js","components/Notice.js","routes/NoticeBorder.js","routes/Profile.js","components/Navigation.js","components/Routes.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","className","type","placeholder","required","onClick","prev","Flag","flagObj","isOwner","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","flagTime","src","width","height","alt","FlagBorder","userObj","attachment","setAttachment","setFlagTime","flagViewTime","setFlagViewTime","state","setState","flags","setFlags","uploadBtn","document","querySelector","setAttribute","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","console","log","collection","add","createdAt","Date","now","creatorId","creatorDisplayName","displayName","clearAttachment","removeAttribute","useEffect","today","hours","getHours","flagFormmat","getMonth","getDate","where","orderBy","onSnapshot","snapshot","flagArray","docs","map","data","hidden","defaultValue","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","capture","disabled","flag","Suro","suroTime","Home","Notice","noticeObj","authority","editing","setEditing","newNoticeTitle","setNewNoticeTitle","newNoticeContents","setNewNoticeContents","contentView","setContentView","toggleEditing","noticeTitle","noticeContents","update","autoComplete","maxLength","cols","rows","NoticeBorder","setNoticeTitle","setNoticeContents","notices","setNotices","newNotice","setNewNotice","noticeArray","notice","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","exact","path","App","init","setInit","setUserObj","setAuthority","getRoles","get","roles","master","submaster","outsider","user","includes","onAuthStateChanged","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2743f91f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService, firebaseInstance } from \"services/fbase\";\nimport React, { useState } from \"react\";\nimport \"styles/Auth.css\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"login_filed\">\n      <div className=\"login_div\">\n        <form onSubmit={onSubmit} className=\"login_form\">\n          <input\n            name=\"email\"\n            type=\"Email\"\n            placeholder=\"Email\"\n            required\n            value={email}\n            onChange={onChange}\n            className=\"login_id\"\n          />\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            value={password}\n            onChange={onChange}\n            className=\"login_pw\"\n          />\n          <input\n            type=\"submit\"\n            value={newAccount ? \"Sing up\" : \"Log In\"}\n            className=\"login_submit\"\n          />\n          {error}\n        </form>\n        <span onClick={toggleAccount} className=\"changeAccount\">\n          {newAccount ? \"Log In\" : \"Create Account\"}\n        </span>\n        <div className=\"atherBtn\">\n          <button\n            name=\"google\"\n            onClick={onSocialClick}\n            className=\"login_google\"\n          >\n            With Google\n          </button>\n          <button>With None</button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React from \"react\";\nimport { dbService, storageService } from \"services/fbase\";\n\nconst Flag = ({ flagObj, isOwner }) => {\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`flag/${flagObj.id}`).delete();\n      await storageService.refFromURL(flagObj.attachmentUrl).delete();\n    }\n  };\n  return (\n    <>\n      <div>{flagObj.flagTime}</div>\n      <img\n        src={flagObj.attachmentUrl}\n        width=\"200px\"\n        height=\"200px\"\n        alt=\"flag\"\n      />\n      {isOwner && (\n        <div>\n          <span onClick={onDeleteClick}>[del]</span>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Flag;\n","import Flag from \"components/Flag\";\nimport React, { useEffect, useState } from \"react\";\nimport { dbService, storageService } from \"services/fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst FlagBorder = ({ userObj }) => {\n  const [attachment, setAttachment] = useState(\"\");\n  const [flagTime, setFlagTime] = useState(\"\");\n  const [flagViewTime, setFlagViewTime] = useState(\"\");\n  const [state, setState] = useState(\"업로드대기\");\n  const [flags, setFlags] = useState([]);\n\n  const onAttachmentChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => clearAttachment();\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    setState(\"업로드중...\");\n\n    const uploadBtn = document.querySelector(\"#upload_img_btn\");\n    uploadBtn.setAttribute(\"disabled\", true);\n    const attachmentRef = storageService\n      .ref()\n      .child(`${userObj.uid}/${uuidv4()}`);\n    const response = await attachmentRef.putString(attachment, \"data_url\");\n    const attachmentUrl = await response.ref.getDownloadURL();\n    console.log(attachmentUrl);\n    await dbService.collection(\"flag\").add({\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      creatorDisplayName: userObj.displayName,\n      attachmentUrl,\n      flagTime,\n    });\n    clearAttachment();\n    setState(\"업로드완료\");\n    uploadBtn.removeAttribute(\"disabled\");\n  };\n  const clearAttachment = () => {\n    setAttachment(\"\");\n    const file = document.querySelector(\"input[type=file]\");\n    file.value = \"\";\n  };\n\n  useEffect(() => {\n    const today = new Date();\n    const hours = today.getHours();\n    const month = today.getMonth() + 1;\n    const day = today.getDate();\n    let flagFormmat = month + \"월\" + day + \"일\";\n    if (hours >= 22 || hours < 12) {\n      setFlagViewTime(\"플래그 22시\");\n      setFlagTime(flagFormmat + \"22시\");\n    } else if (hours >= 19) {\n      setFlagViewTime(\"플래그 7시\");\n      setFlagTime(flagFormmat + \"19시\");\n    } else if (hours >= 12) {\n      setFlagViewTime(\"플래그 12시\");\n      setFlagTime(flagFormmat + \"12시\");\n    } else {\n      setFlagViewTime(\"플래그 시간오류\");\n      setFlagTime(\"flagNoTime\");\n    }\n\n    dbService\n      .collection(\"flag\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const flagArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setFlags(flagArray);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">플래그 인증</h1>\n      <h4>{flagViewTime}</h4>\n      <form onSubmit={onSubmit}>\n        <input hidden={true} defaultValue={flagTime} />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onAttachmentChange}\n          required\n        />\n        <input\n          id=\"upload_img_btn\"\n          type=\"submit\"\n          value=\"업로드\"\n          capture=\"camera\"\n          disabled={false}\n        />\n        {attachment && (\n          <div>\n            <img src={attachment} width=\"50px\" height=\"50px\" alt=\"flag\" />\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n      </form>\n      <h4>{state}</h4>\n      {flags.map((flag) => (\n        <Flag\n          key={flag.id}\n          flagObj={flag}\n          isOwner={flag.creatorId === userObj.uid}\n        />\n      ))}\n    </>\n  );\n};\nexport default FlagBorder;\n","import React, { useState } from \"react\";\n\nconst Suro = () => {\n  const [suroTime, setSuroTime] = useState(\"\");\n  return (\n    <>{suroTime ? <div>수로 => {suroTime}</div> : <div>수로투표중...</div>}</>\n  );\n};\nexport default Suro;\n","import React from \"react\";\nimport Suro from \"./Suro\";\n\nconst Home = () => {\n  return (\n    <>\n      <div>공지사항</div>\n      <div>플래그 인증</div>\n      <Suro />\n    </>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { dbService } from \"services/fbase\";\nimport \"styles/Notice.css\";\n\nconst Notice = ({ noticeObj, authority, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNoticeTitle, setNewNoticeTitle] = useState(\"\");\n  const [newNoticeContents, setNewNoticeContents] = useState(\"\");\n  const [contentView, setContentView] = useState(false);\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n    setNewNoticeTitle(noticeObj.noticeTitle);\n    setNewNoticeContents(noticeObj.noticeContents);\n  };\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`notices/${noticeObj.id}`).delete();\n    }\n  };\n  const onToggleTitleClick = () => {\n    setContentView((prev) => !prev);\n  };\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"notice_title\") {\n      setNewNoticeTitle(value);\n    } else if (name === \"notice_contents\") {\n      setNewNoticeContents(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`notices/${noticeObj.id}`).update({\n      noticeTitle: newNoticeTitle,\n      noticeContents: newNoticeContents,\n    });\n    setEditing(false);\n  };\n\n  return (\n    <>\n      {editing ? (\n        <>\n          <form className=\"notice_form\" onSubmit={onSubmit} autoComplete=\"off\">\n            <input\n              className=\"notice_form_title\"\n              name=\"notice_title\"\n              type=\"text\"\n              placeholder=\"제목\"\n              maxLength={60}\n              value={newNoticeTitle}\n              onChange={onChange}\n              required\n            />\n            <textarea\n              className=\"notice_form_contents\"\n              name=\"notice_contents\"\n              cols=\"40\"\n              rows=\"8\"\n              placeholder=\"내용\"\n              maxLength={500}\n              value={newNoticeContents}\n              onChange={onChange}\n              required\n            />\n            <input type=\"submit\" value=\"수정하기\" />\n            <button onClick={toggleEditing}>cancel</button>\n          </form>\n        </>\n      ) : (\n        <div className=\"notice\">\n          <div className=\"notice_header\">\n            <div className=\"notice_title_and_button\">\n              <h4 className=\"notice_title\" onClick={onToggleTitleClick}>\n                {noticeObj.noticeTitle}\n              </h4>\n              <div>\n                {isOwner && (\n                  <>\n                    <span onClick={toggleEditing}>[edit]</span>\n                    <span onClick={onDeleteClick}>[del]</span>\n                  </>\n                )}\n              </div>\n            </div>\n            <h4>{noticeObj.creatorDisplayName}</h4>\n          </div>\n          <div className=\"notice_contents\">\n            {contentView && <pre>{noticeObj.noticeContents}</pre>}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Notice;\n","import Notice from \"components/Notice\";\nimport React, { useEffect, useState } from \"react\";\nimport { dbService } from \"services/fbase\";\nimport \"styles/NoticeBorder.css\";\n\nconst NoticeBorder = ({ userObj, authority }) => {\n  const [noticeTitle, setNoticeTitle] = useState(\"\");\n  const [noticeContents, setNoticeContents] = useState(\"\");\n  const [notices, setNotices] = useState([]);\n  const [newNotice, setNewNotice] = useState(false);\n\n  useEffect(() => {\n    dbService\n      .collection(\"notices\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const noticeArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNotices(noticeArray);\n      });\n  }, []);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.collection(\"notices\").add({\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      creatorDisplayName: userObj.displayName,\n      noticeTitle,\n      noticeContents,\n    });\n    setNoticeTitle(\"\");\n    setNoticeContents(\"\");\n    setNewNotice(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"notice_title\") {\n      setNoticeTitle(value);\n    } else if (name === \"notice_contents\") {\n      setNoticeContents(value);\n    }\n  };\n  const toggleNoticeWrite = () => {\n    setNewNotice((prev) => !prev);\n  };\n  return (\n    <>\n      <h1 className=\"title\">공지사항</h1>\n      {(authority === \"admin\" || authority === \"master\") && (\n        <>\n          <span onClick={toggleNoticeWrite}>글쓰기</span>\n          {newNotice ? (\n            <form\n              onSubmit={onSubmit}\n              className=\"notice_form\"\n              autoComplete=\"off\"\n            >\n              <input\n                className=\"notice_form_title\"\n                name=\"notice_title\"\n                type=\"text\"\n                placeholder=\"제목\"\n                maxLength={60}\n                value={noticeTitle}\n                onChange={onChange}\n                required\n              />\n              <textarea\n                className=\"notice_form_contents\"\n                name=\"notice_contents\"\n                cols=\"40\"\n                rows=\"8\"\n                placeholder=\"내용\"\n                maxLength={500}\n                value={noticeContents}\n                onChange={onChange}\n                required\n              />\n              <input type=\"submit\" value=\"저장\" />\n            </form>\n          ) : (\n            <></>\n          )}\n        </>\n      )}\n      {notices.map((notice) => (\n        <Notice\n          key={notice.id}\n          noticeObj={notice}\n          authority={authority}\n          isOwner={notice.creatorId === userObj.uid || authority === \"master\"}\n        />\n      ))}\n    </>\n  );\n};\nexport default NoticeBorder;\n","import { authService } from \"services/fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"닉네임\"\n          value={newDisplayName}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"수정\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/profile\">{userObj.displayName}의 프로필</Link>\n      </li>\n      <li>\n        <Link to=\"/notice\">Notice</Link>\n      </li>\n      <li>\n        <Link to=\"/flag\">Flag</Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport FlagBorder from \"routes/FlagBorder\";\nimport Home from \"routes/Home\";\nimport NoticeBorder from \"routes/NoticeBorder\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ refreshUser, userObj, authority }) => {\n  return (\n    <Router>\n      <div className=\"contents\">\n        {userObj && <Navigation userObj={userObj} />}\n        <Switch>\n          {userObj ? (\n            <>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n              <Route exact path=\"/notice\">\n                <NoticeBorder userObj={userObj} authority={authority} />\n              </Route>\n              <Route exact path=\"/flag\">\n                <FlagBorder userObj={userObj} />\n              </Route>\n            </>\n          ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )}\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Routes\";\nimport { authService, dbService } from \"services/fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [authority, setAuthority] = useState(\"user\");\n\n  const getRoles = async (uid) => {\n    const roles = await (await dbService.collection(\"role\").get()).docs.map(\n      (doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      })\n    );\n    const {\n      0: { master, submaster, outsider, user },\n    } = roles;\n\n    if (user.includes(uid)) {\n      setAuthority(\"user\");\n    } else if (submaster.includes(uid)) {\n      setAuthority(\"submaster\");\n    } else if (master.includes(uid)) {\n      setAuthority(\"master\");\n    }\n  };\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          authority,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        getRoles(user.uid);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          userObj={userObj}\n          authority={authority}\n        />\n      ) : (\n        \"Loding...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"styles/Index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}